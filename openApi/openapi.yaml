openapi: 3.0.0

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      description: Authenticate a user and obtain a JWT access token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
            examples:
              userLogin:
                summary: Example login
                value:
                  username: johndoe
                  password: SecurePass456
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              examples:
                successResponse:
                  summary: Example response
                  value:
                    accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorizedError:
                  summary: Unauthorized error
                  value:
                    statusCode: 401
                    timestamp: '2024-09-28T18:10:21.673Z'
                    path: /auth/login
                    message:
                      message: Unauthorized
                      statusCode: 401
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      description: Create a new user account with a username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
            examples:
              userRegistration:
                summary: Example registration
                value:
                  username: johndoe
                  password: SecurePass456
      responses:
        '201':
          description: User successfully registered
        '409':
          description: Conflict — user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Conflict error
                  value:
                    statusCode: 409
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /auth/register
                    message:
                      message: User with this username already exists
                      statusCode: 409
  /articles:
    post:
      tags:
        - Articles
      summary: Create a new article
      description: Create a new article. Requires authentication.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArticleDto'
            examples:
              newArticle:
                summary: Example article creation
                value:
                  title: An Interesting Article
                  description: This article explores interesting topics.
      responses:
        '201':
          description: Article successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
              examples:
                createdArticle:
                  summary: Created article
                  value:
                    id: 1
                    title: An Interesting Article
                    description: This article explores interesting topics.
                    publishedAt: '2024-09-28T18:20:00Z'
                    author:
                      id: 2
                      username: johndoe
        '400':
          description: Bad Request — validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Bad Request error
                  value:
                    statusCode: 400
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles
                    message:
                      message: Bad Request
                      statusCode: 400
        '401':
          description: Unauthorized — authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Unauthorized error
                  value:
                    statusCode: 401
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles
                    message:
                      message: Unauthorized
                      statusCode: 401
    get:
      tags:
        - Articles
      summary: List articles
      description: Retrieve a list of articles with optional filtering and pagination.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of articles to return per page (default is 10)
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination (default is 1)
        - in: query
          name: author
          schema:
            type: string
          description: Filter articles by author username
        - in: query
          name: timespan
          schema:
            $ref: '#/components/schemas/TimespanEnum'
          description: Filter articles by timespan
      responses:
        '200':
          description: A list of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
              examples:
                articlesList:
                  summary: List of articles
                  value:
                    - id: 1
                      title: An Interesting Article
                      description: This article explores interesting topics.
                      publishedAt: '2024-09-28T18:20:00Z'
                      author:
                        id: 2
                        username: johndoe
                    - id: 2
                      title: Another Article
                      description: More interesting content.
                      publishedAt: '2024-09-28T18:25:00Z'
                      author:
                        id: 3
                        username: janedoe
        '400':
          description: Bad Request — invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Bad Request error
                  value:
                    statusCode: 400
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles
                    message:
                      message: Bad Request
                      statusCode: 400
  /articles/{id}:
    patch:
      tags:
        - Articles
      summary: Update an article
      description: Update an existing article. Requires authentication.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: Article ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArticleDto'
            examples:
              updateArticle:
                summary: Example article update
                value:
                  title: Updated Article Title
                  description: Updated description of the article.
      responses:
        '200':
          description: Article successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
              examples:
                updatedArticle:
                  summary: Updated article
                  value:
                    id: 1
                    title: Updated Article Title
                    description: Updated description of the article.
                    publishedAt: '2024-09-28T18:20:00Z'
                    author:
                      id: 2
                      username: johndoe
        '400':
          description: Bad Request — validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Bad Request error
                  value:
                    statusCode: 400
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles/1
                    message:
                      message: Bad Request
                      statusCode: 400
        '401':
          description: Unauthorized — authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Unauthorized error
                  value:
                    statusCode: 401
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles/1
                    message:
                      message: Unauthorized
                      statusCode: 401
        '403':
          description: Forbidden — insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Forbidden error
                  value:
                    statusCode: 403
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles/1
                    message:
                      message: Forbidden
                      statusCode: 403
        '404':
          description: Article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Not found error
                  value:
                    statusCode: 404
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles/1
                    message:
                      message: Article not found
                      statusCode: 404
    delete:
      tags:
        - Articles
      summary: Delete an article
      description: Delete an existing article. Requires authentication.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: Article ID
      responses:
        '204':
          description: Article successfully deleted
        '401':
          description: Unauthorized — authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Unauthorized error
                  value:
                    statusCode: 401
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles/1
                    message:
                      message: Unauthorized
                      statusCode: 401
        '403':
          description: Forbidden — insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Forbidden error
                  value:
                    statusCode: 403
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles/1
                    message:
                      message: Forbidden
                      statusCode: 403
        '404':
          description: Article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                conflictError:
                  summary: Not found error
                  value:
                    statusCode: 404
                    timestamp: '2024-09-28T18:15:30.123Z'
                    path: /articles/1
                    message:
                      message: Article not found
                      statusCode: 404

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginDto:
      type: object
      properties:
        username:
          type: string
          description: The user's username
        password:
          type: string
          description: The user's password
      required:
        - username
        - password
    RegisterDto:
      type: object
      properties:
        username:
          type: string
          description: Desired username
          minLength: 4
          maxLength: 20
        password:
          type: string
          description: Desired password
          minLength: 8
          maxLength: 30
      required:
        - username
        - password
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT access token
      required:
        - accessToken
    Article:
      type: object
      properties:
        id:
          type: integer
          description: Article ID
        title:
          type: string
          description: Article title
        description:
          type: string
          description: Article content or description
        publishedAt:
          type: string
          format: date-time
          description: Publication date and time
        author:
          $ref: '#/components/schemas/User'
      required:
        - id
        - title
        - description
        - publishedAt
        - author
    CreateArticleDto:
      type: object
      properties:
        title:
          type: string
          description: Title of the article
          minLength: 5
          maxLength: 100
        description:
          type: string
          description: Content or description of the article
          minLength: 5
          maxLength: 1000
      required:
        - title
        - description
    UpdateArticleDto:
      type: object
      properties:
        title:
          type: string
          description: Updated title of the article
          minLength: 5
          maxLength: 100
        description:
          type: string
          description: Updated content or description of the article
          minLength: 5
          maxLength: 1000
      required:
        - title
        - description
    TimespanEnum:
      type: string
      description: Timespan for filtering articles
      enum:
        - day
        - week
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
        username:
          type: string
          description: Username of the author
      required:
        - id
        - username
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the error occurred
        path:
          type: string
          description: Endpoint path that was accessed
        message:
          type: object
          description: Error details
          properties:
            message:
              type: string
              description: Descriptive error message
            statusCode:
              type: integer
              description: HTTP status code
          required:
            - message
            - statusCode
      required:
        - statusCode
        - timestamp
        - path
        - message
